name: CI
on:
  push:
    tags-ignore:
      - 'v*'
    branches:
      - '*'
  pull_request:
jobs:
  libcore:
    name: Native Build (LibCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Calculate Golang Status
        run: |
          find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status

      - name: Calculate Libcore Status
        run: |
          git ls-files libcore | xargs cat | sha1sum > libcore_status

      - name: Cache LibCore
        id: cache
        uses: actions/cache@v4
        with:
          path: app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}-ci

      - name: Setup Golang
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5
        with:
          go-version: ^1.21

      - name: Execute Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./run lib core

  build:
    name: Build Release APK
    runs-on: ubuntu-latest
    needs: libcore
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Calculate Golang Status
        run: |
          find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status

      - name: Calculate Libcore Status
        run: |
          git ls-files libcore | xargs cat | sha1sum > libcore_status

      - name: Cache LibCore
        uses: actions/cache@v4
        with:
          path: app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}-ci

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: gradle-release-${{ hashFiles('**/*.gradle.kts') }}-ci

      - name: Execute Gradle Build
        env:
          BUILD_PLUGIN: none
          GRADLE_OPTS: "-Xmx4g"
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "ndk.dir=${ANDROID_HOME}/ndk/25.0.8775105" >> local.properties
          export LOCAL_PROPERTIES="${{ secrets.LOCAL_PROPERTIES }}"
          ./run init action gradle
          ./gradlew app:assembleRelease --no-daemon --stacktrace
          APK=$(find app/build/outputs/apk -name '*arm64-v8a*.apk')
          APK=$(dirname "$APK")
          echo "APK_PATH=$APK" >> $GITHUB_ENV

      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: ${{ env.APK_PATH }}